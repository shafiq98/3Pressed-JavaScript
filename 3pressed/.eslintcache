[{"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\index.js":"1","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\GlobalElements\\navArray.js":"2","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\GlobalElements\\Navigation.js":"3","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\GlobalElements\\companyHeader.js":"4","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\fixedInformationArray\\tutorArray.js":"5","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\fixedInformationArray\\listingArray.js":"6","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\fixedInformationArray\\subjectArray.js":"7","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\Templates\\Element.js":"8","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\Templates\\Particulars.js":"9","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\Templates\\SingleListing.js":"10","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\fixedInformationArray\\contactArray.js":"11","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\GlobalElements\\footer.js":"12","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\GlobalElements\\ChoiceContext.js":"13"},{"size":2776,"mtime":1609385809959,"results":"14","hashOfConfig":"15"},{"size":468,"mtime":1608891529444,"results":"16","hashOfConfig":"15"},{"size":2737,"mtime":1609219956712,"results":"17","hashOfConfig":"15"},{"size":204,"mtime":1608888353475,"results":"18","hashOfConfig":"15"},{"size":475,"mtime":1609210551392,"results":"19","hashOfConfig":"15"},{"size":643,"mtime":1609212701016,"results":"20","hashOfConfig":"15"},{"size":342,"mtime":1609212707841,"results":"21","hashOfConfig":"15"},{"size":1404,"mtime":1609314618953,"results":"22","hashOfConfig":"15"},{"size":1766,"mtime":1609314544681,"results":"23","hashOfConfig":"15"},{"size":2392,"mtime":1609314775980,"results":"24","hashOfConfig":"15"},{"size":625,"mtime":1609220895133,"results":"25","hashOfConfig":"15"},{"size":190,"mtime":1609221883167,"results":"26","hashOfConfig":"15"},{"size":121,"mtime":1609311917476,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1a69thu",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\index.js",["60","61"],"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\GlobalElements\\navArray.js",[],["62","63"],"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\GlobalElements\\Navigation.js",[],"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\GlobalElements\\companyHeader.js",[],"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\fixedInformationArray\\tutorArray.js",[],"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\fixedInformationArray\\listingArray.js",[],"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\fixedInformationArray\\subjectArray.js",[],"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\Templates\\Element.js",["64","65","66","67","68"],"import React from 'react'\r\n\r\nimport {listingArray} from '../fixedInformationArray/listingArray';\r\nimport {subjectArray} from '../fixedInformationArray/subjectArray';\r\n\r\nimport {useState, useContext} from 'react';\r\n\r\nimport {ChoiceContext} from '..//GlobalElements/ChoiceContext';\r\n\r\n// this template is used to display a grid information like categories\r\nlet userChoice = \"Nothing yet\";\r\n\r\n// when an option in the grid is chosen, we record that choice\r\n// using our clickHandler\r\nconst Element = (props) => {\r\n  const {title} = props;\r\n  const {choice, setChoice} = useContext(ChoiceContext);\r\n  const clickHandler = () => {\r\n    setChoice(title);\r\n  }\r\n  \r\n  // this return statement defines how each individual grid looks like\r\n  // modify this to add icons, etc in the future\r\n  return (\r\n      <article id = \"element\" className = \"element\" onClick = {() => clickHandler(title)}>\r\n      <span><h1>{title}</h1></span>\r\n      </article>\r\n  )\r\n}\r\n\r\nconst ElementList = (props) => {\r\n  \r\n  const {displayArray, ToDisplay} = props;\r\n  // const {displayArray, setDisplayArray} = useContext(ChoiceContext);\r\n\r\n  return (\r\n    <section id = 'ElementList' className = 'ElementList'>\r\n      {(ToDisplay===1) && displayArray.map((element) => {\r\n        return <Element \r\n        key = {element.id}\r\n        {...element}>\r\n        </Element>\r\n      })}\r\n    </section>\r\n  )\r\n  \r\n}\r\n\r\nexport default ElementList\r\n","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\Templates\\Particulars.js",["69","70","71"],"import React from 'react'\r\nimport {useState, useContext} from 'react';\r\nimport {ChoiceContext} from '..//GlobalElements/ChoiceContext';\r\n\r\n\r\n// this template will be used for listing of inidivdual people, with more detail like a list of tutors\r\nlet userChoice = \"None\";\r\nconst Particulars = (props) => {\r\n    const {title, age, sex, distance, rate, avatar} = props;\r\n    const {choice, setChoice} = useContext(ChoiceContext);\r\n    const clickHandler = () => {\r\n        setChoice(title);\r\n    }\r\n    return (\r\n        <article id = \"element\" className = \"element\" onClick = {clickHandler}>\r\n            <div className=\"information\">\r\n                <span><h1>{title}</h1></span>\r\n                <h4>Age : {age}</h4>\r\n                <h4>Sex : {sex}</h4>\r\n                <h4>Distance : {distance}km</h4>\r\n                <h4>Rate : ${rate}/hr</h4>\r\n            </div>\r\n            <div className=\"image-container\">\r\n                <img src={avatar} alt=\"\"/>\r\n            </div>         \r\n            \r\n        </article>\r\n    )\r\n}\r\n\r\nexport const ParticularsListing = (props) => {\r\n    const {particularsArray, ToDisplay} = props;\r\n    return (\r\n        <section id = 'particularsListing' className=\"particularsListing\">\r\n            {(ToDisplay === 2) && particularsArray.map((element) => {\r\n                return <Particulars\r\n                // key is the unique id for an element inside the array, need this to avoid error inside console\r\n                key = {element.id}\r\n                // the spread operator below returns everything inside element, \r\n                // so we dont have to name every possible item that can exist inside element\r\n                {...element}>\r\n                </Particulars>\r\n            })}\r\n        </section>\r\n    )\r\n}","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\Templates\\SingleListing.js",["72","73","74"],"import React from 'react'\r\nimport {useState, useEffect, useContext} from 'react';\r\nimport {ChoiceContext} from '..//GlobalElements/ChoiceContext';\r\n\r\n\r\nconst SingleListing = (props) => {\r\n    const {title, age, sex, distance, rate, avatar} = props;\r\n    const {choice, setChoice} = useContext(ChoiceContext);\r\n    const clickHandler = () => {\r\n        setChoice('default');\r\n    }\r\n    return (\r\n        <article id = \"SingleListing\" className = \"SingleListing\" onClick = {clickHandler}>\r\n            <div className=\"information\">\r\n                <img src={avatar} alt=\"\"/>\r\n                <h2>{title}</h2>\r\n                <p>Age : {age}</p>\r\n                <p>Sex : {sex}</p>\r\n                <p>Distance : {distance}km</p>\r\n                <p>Rate : ${rate}/hr</p>\r\n            </div>\r\n\r\n            <div className=\"contact\">\r\n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/1384/1384023.svg\" alt=\"\"/>\r\n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/725/725643.svg\" alt=\"\"/>\r\n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/151/151804.svg\" alt=\"\"/>\r\n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/151/151876.svg\" alt=\"\"/>\r\n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/151/151949.svg\" alt=\"\"/>\r\n            </div>\r\n\r\n            <input type=\"submit\" value = \"Apply Now\"/>\r\n            \r\n        </article>\r\n    )\r\n}\r\n\r\nexport const DisplayListing = (props) => {\r\n    // create an array of just one element so i can reuse return statement from other Templates\r\n    const {personArray, index, ToDisplay} = props;\r\n    const person = [personArray[index]]\r\n    \r\n    // different classname and id for different css styling purposes\r\n    return (\r\n        <section id = \"Listing\" className=\"Listing\" >\r\n            {(ToDisplay === 3) && person.map((element) => {\r\n                return <SingleListing\r\n                // key is the unique id for an element inside the array, need this to avoid error inside console\r\n                key = {element.id}\r\n                // the spread operator below returns everything inside element, \r\n                // so we dont have to name every possible item that can exist inside element\r\n                {...element}>\r\n                </SingleListing>\r\n            }\r\n            \r\n            )}\r\n        </section>\r\n    )\r\n}","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\fixedInformationArray\\contactArray.js",[],["75","76"],"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\GlobalElements\\footer.js",[],"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\GlobalElements\\ChoiceContext.js",["77"],"import React from 'react'\r\nimport {useContext} from 'react';\r\n\r\n\r\nexport const ChoiceContext = React.createContext(null);",{"ruleId":"78","severity":1,"message":"79","line":3,"column":30,"nodeType":"80","messageId":"81","endLine":3,"endColumn":40},{"ruleId":"82","severity":1,"message":"83","line":42,"column":3,"nodeType":"80","endLine":42,"endColumn":12,"suggestions":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"78","severity":1,"message":"89","line":3,"column":9,"nodeType":"80","messageId":"81","endLine":3,"endColumn":21},{"ruleId":"78","severity":1,"message":"90","line":4,"column":9,"nodeType":"80","messageId":"81","endLine":4,"endColumn":21},{"ruleId":"78","severity":1,"message":"91","line":6,"column":9,"nodeType":"80","messageId":"81","endLine":6,"endColumn":17},{"ruleId":"78","severity":1,"message":"92","line":11,"column":5,"nodeType":"80","messageId":"81","endLine":11,"endColumn":15},{"ruleId":"78","severity":1,"message":"93","line":17,"column":10,"nodeType":"80","messageId":"81","endLine":17,"endColumn":16},{"ruleId":"78","severity":1,"message":"91","line":2,"column":9,"nodeType":"80","messageId":"81","endLine":2,"endColumn":17},{"ruleId":"78","severity":1,"message":"92","line":7,"column":5,"nodeType":"80","messageId":"81","endLine":7,"endColumn":15},{"ruleId":"78","severity":1,"message":"93","line":10,"column":12,"nodeType":"80","messageId":"81","endLine":10,"endColumn":18},{"ruleId":"78","severity":1,"message":"91","line":2,"column":9,"nodeType":"80","messageId":"81","endLine":2,"endColumn":17},{"ruleId":"78","severity":1,"message":"94","line":2,"column":19,"nodeType":"80","messageId":"81","endLine":2,"endColumn":28},{"ruleId":"78","severity":1,"message":"93","line":8,"column":12,"nodeType":"80","messageId":"81","endLine":8,"endColumn":18},{"ruleId":"85","replacedBy":"95"},{"ruleId":"87","replacedBy":"96"},{"ruleId":"78","severity":1,"message":"79","line":2,"column":9,"nodeType":"80","messageId":"81","endLine":2,"endColumn":19},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setWorkingArray'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [choice] as a second argument to the useEffect Hook.",["97"],"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"'listingArray' is defined but never used.","'subjectArray' is defined but never used.","'useState' is defined but never used.","'userChoice' is assigned a value but never used.","'choice' is assigned a value but never used.","'useEffect' is defined but never used.",["98"],["99"],{"desc":"100","fix":"101"},"no-global-assign","no-unsafe-negation","Add dependencies array: [choice]",{"range":"102","text":"103"},[1854,1854],", [choice]"]