[{"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\index.js":"1","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\GlobalElements\\navArray.js":"2","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\GlobalElements\\Navigation.js":"3","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\GlobalElements\\companyHeader.js":"4","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\fixedInformationArray\\tutorArray.js":"5","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\fixedInformationArray\\listingArray.js":"6","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\fixedInformationArray\\subjectArray.js":"7","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\Templates\\Element.js":"8","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\Templates\\Particulars.js":"9","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\Templates\\SingleListing.js":"10","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\fixedInformationArray\\contactArray.js":"11","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\GlobalElements\\footer.js":"12"},{"size":1447,"mtime":1609305587115,"results":"13","hashOfConfig":"14"},{"size":468,"mtime":1608891529444,"results":"15","hashOfConfig":"14"},{"size":2737,"mtime":1609219956712,"results":"16","hashOfConfig":"14"},{"size":204,"mtime":1608888353475,"results":"17","hashOfConfig":"14"},{"size":475,"mtime":1609210551392,"results":"18","hashOfConfig":"14"},{"size":643,"mtime":1609212701016,"results":"19","hashOfConfig":"14"},{"size":342,"mtime":1609212707841,"results":"20","hashOfConfig":"14"},{"size":1938,"mtime":1609303870142,"results":"21","hashOfConfig":"14"},{"size":1773,"mtime":1609223305241,"results":"22","hashOfConfig":"14"},{"size":2638,"mtime":1609305628308,"results":"23","hashOfConfig":"14"},{"size":625,"mtime":1609220895133,"results":"24","hashOfConfig":"14"},{"size":190,"mtime":1609221883167,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1a69thu",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\index.js",["53","54","55"],"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\GlobalElements\\navArray.js",[],["56","57"],"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\GlobalElements\\Navigation.js",[],"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\GlobalElements\\companyHeader.js",[],"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\fixedInformationArray\\tutorArray.js",[],"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\fixedInformationArray\\listingArray.js",[],"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\fixedInformationArray\\subjectArray.js",[],"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\Templates\\Element.js",["58","59"],"import React from 'react'\r\n\r\nimport {listingArray} from '../fixedInformationArray/listingArray';\r\nimport {subjectArray} from '../fixedInformationArray/subjectArray';\r\n\r\nimport {useState} from 'react';\r\n\r\n// this template is used to display a grid information like categories\r\nlet userChoice = \"Nothing yet\";\r\n\r\n// when an option in the grid is chosen, we record that choice\r\n// using our clickHandler\r\nconst Element = (props) => {\r\n  const {title} = props;\r\n  const clickHandler = () => {\r\n    userChoice = title;\r\n  }\r\n  \r\n  // this return statement defines how each individual grid looks like\r\n  // modify this to add icons, etc in the future\r\n  return (\r\n      <article id = \"element\" className = \"element\" onClick = {() => clickHandler(title)}>\r\n      <span><h1>{title}</h1></span>\r\n      </article>\r\n  )\r\n}\r\n\r\n// when a grid is chosen, that exists in our switch case, we move into that option\r\n// else, we go back to the home page as default\r\nconst ElementList = (props) => {\r\n  // listing array is the first array we want when we first enter the website\r\n  const [isDetailed, setIsDetailed] = useState(false);\r\n\r\n  const [workingArray, setWorkingArray] = useState(listingArray);\r\n\r\n  // need to add more elements into the switch case when we want more functionality\r\n  const clickHandler = () => {\r\n    console.log(userChoice);\r\n    switch (userChoice) {\r\n      case \"Academic Tuition\":\r\n        setWorkingArray(subjectArray);\r\n        break;\r\n      case \"English\": \r\n        alert(\"Sorry no listings available yet\");\r\n        break;\r\n      default:\r\n        setWorkingArray(listingArray);\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section id = 'ElementList' className = 'ElementList' onClick = {() => clickHandler()}>\r\n      {workingArray.map((element) => {\r\n        return <Element \r\n        key = {element.id}\r\n        {...element}>\r\n        </Element>\r\n      })}\r\n    </section>\r\n  )\r\n  \r\n}\r\n\r\nexport default ElementList\r\n","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\Templates\\Particulars.js",["60"],"import React from 'react'\r\nimport {useState} from 'react';\r\n\r\n// this template will be used for listing of inidivdual people, with more detail like a list of tutors\r\nlet userChoice = \"None\";\r\nconst Particulars = (props) => {\r\n    const {title, age, sex, distance, rate, avatar} = props;\r\n    const clickHandler = () => {\r\n        userChoice = title;\r\n    }\r\n    return (\r\n        <article id = \"element\" className = \"element\" onClick = {clickHandler}>\r\n            <div className=\"information\">\r\n                <span><h1>{title}</h1></span>\r\n                <h4>Age : {age}</h4>\r\n                <h4>Sex : {sex}</h4>\r\n                <h4>Distance : {distance}km</h4>\r\n                <h4>Rate : ${rate}/hr</h4>\r\n            </div>\r\n            <div className=\"image-container\">\r\n                <img src={avatar} alt=\"\"/>\r\n            </div>         \r\n            \r\n        </article>\r\n    )\r\n}\r\n\r\nexport const ParticularsListing = (props) => {\r\n    const {particularsArray} = props;\r\n    const clickHandler = () => {\r\n        console.log(userChoice);\r\n    }\r\n    const [showListing, setShowListing] = useState(false);\r\n    return (\r\n        <section id = 'particularsListing' className=\"particularsListing\" onClick = {clickHandler}>\r\n            {!showListing && particularsArray.map((element) => {\r\n                return <Particulars\r\n                // key is the unique id for an element inside the array, need this to avoid error inside console\r\n                key = {element.id}\r\n                // the spread operator below returns everything inside element, \r\n                // so we dont have to name every possible item that can exist inside element\r\n                {...element}>\r\n                </Particulars>\r\n            })}\r\n        </section>\r\n    )\r\n}","C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\Templates\\SingleListing.js",["61"],"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\fixedInformationArray\\contactArray.js",[],"C:\\Users\\pcadmin\\Documents\\GitHub\\3Pressed ReactJS\\3pressed\\src\\GlobalElements\\footer.js",[],{"ruleId":"62","severity":1,"message":"63","line":3,"column":9,"nodeType":"64","messageId":"65","endLine":3,"endColumn":19},{"ruleId":"62","severity":1,"message":"66","line":3,"column":21,"nodeType":"64","messageId":"65","endLine":3,"endColumn":29},{"ruleId":"62","severity":1,"message":"67","line":22,"column":9,"nodeType":"64","messageId":"65","endLine":22,"endColumn":19},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"62","severity":1,"message":"72","line":32,"column":10,"nodeType":"64","messageId":"65","endLine":32,"endColumn":20},{"ruleId":"62","severity":1,"message":"73","line":32,"column":22,"nodeType":"64","messageId":"65","endLine":32,"endColumn":35},{"ruleId":"62","severity":1,"message":"74","line":33,"column":25,"nodeType":"64","messageId":"65","endLine":33,"endColumn":39},{"ruleId":"75","severity":1,"message":"76","line":43,"column":5,"nodeType":"64","endLine":43,"endColumn":14,"suggestions":"77"},"no-unused-vars","'useReducer' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'tutorArray' is defined but never used.","no-native-reassign",["78"],"no-negated-in-lhs",["79"],"'isDetailed' is assigned a value but never used.","'setIsDetailed' is assigned a value but never used.","'setShowListing' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setToDisplay'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [personArray.length] as a second argument to the useEffect Hook.",["80"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Add dependencies array: [personArray.length]",{"range":"83","text":"84"},[1901,1901],", [personArray.length]"]